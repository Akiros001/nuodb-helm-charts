---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: monitor
    group: nuodb
    subgroup: monitoring
  name: dashboard
spec:
  ports:
    - name: frontend
      port: 80
      protocol: TCP
      targetPort: 3000
{{- if .Values.influx.service.nodePort }}
      nodePort: {{ .Values.influx.service.nodePort }}
{{- end }}
  selector:
    app: monitor
    selector: frontend
  sessionAffinity: None
  type: {{ .Values.influx.service.type }}
  {{- if and (eq .Values.influx.service.type "ClusterIP") .Values.influx.service.clusterIP }}
  clusterIP: {{ .Values.influx.service.clusterIP }}
  {{- end }}
  {{- if and (eq .Values.influx.service.type "LoadBalancer") .Values.influx.service.loadBalancerIP }}
  loadBalancerIP: {{ .Values.influx.service.loadBalancerIP }}
  {{- end }}
  {{- if .Values.influx.service.externalIPs }}
  externalIPs: {{ toYaml .Values.influx.service.externalIPs | nindent 4 }}
  {{- end }}
  {{- if .Values.influx.service.loadBalancerSourceRanges }}
  loadBalancerSourceRanges: {{- toYaml .Values.influx.service.loadBalancerSourceRanges | nindent 4 }}
  {{- end }}
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    description: "Service for metricdb."
  labels:
    app: monitor
    group: nuodb
    subgroup: monitoring
    selector: backend
  name: metricdb
spec:
  ports:
  - { name: 8086-tcp, port: 8086, protocol: TCP, targetPort: 8086  }
  - { name: 2003-tcp, port: 2003, protocol: TCP, targetPort: 2003  }
  selector:
    app: monitor
    selector: backend      
  sessionAffinity: None
  type: LoadBalancer
status:
  loadBalancer: {}